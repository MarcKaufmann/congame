name: CI/CD
on: [push]
jobs:
  test:
    name: "Test"
    runs-on: "ubuntu-24.04"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: congame
          POSTGRES_PASSWORD: congame
          POSTGRES_DB: congame
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout (+ fetch lfs)
      uses: actions/checkout@master
      with:
        lfs: true # Does not checkout the files, only fetches them

    - name: Checkout lfs objects
      run: git lfs checkout

    - name: Cache Racket dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/racket
          ~/.local/share/racket
        key: ${{ runner.os }}-${{ hashFiles('**/info.rkt') }}-${{ hashFiles('ci/setup-catalogs.sh') }}

    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.14
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.17'

    - name: Install Racket deps
      run: |
        ./ci/setup-catalogs.sh
        raco pkg install -D --auto --skip-installed \
          congame-core/ \
          conscript/ \
          congame-example-study/ \
          congame-identity/ \
          studies/ \
          congame-pjb-studies/ \
          congame-price-lists/ \
          congame-smtp-proxy/ \
          congame-tests/ \
          congame-web/
        raco setup --pkgs \
          congame-core \
          conscript \
          congame-example-study \
          congame-identity \
          studies \
          congame-pjb-studies \
          congame-price-lists \
          congame-smtp-proxy \
          congame-tests \
          congame-web

    - name: Run tests
      run: ./bin/run-tests.sh
      env:
        CONGAME_WEB_TEST_DB_HOST: 127.0.0.1
        CONGAME_WEB_TEST_DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        CONGAME_WEB_TEST_DB_NAME: congame
        CONGAME_WEB_TEST_DB_USERNAME: congame
        CONGAME_WEB_TEST_DB_PASSWORD: congame
      if: ${{ !contains(github.event.head_commit.message, '[skip tests]') }}

  build:
    name: "Build"
    runs-on: "ubuntu-24.04"

    steps:
    - name: Checkout (+ fetch lfs)
      uses: actions/checkout@master
      with:
        lfs: true # Does not checkout the files, only fetches them

    - name: Checkout lfs objects
      run: git lfs checkout

    - name: Cache npm
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

    - name: Cache Racket dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/racket
          ~/.local/share/racket
        key: ${{ runner.os }}-${{ hashFiles('**/info.rkt') }}-${{ hashFiles('ci/setup-catalogs.sh') }}

    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.14
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.17'

    - name: Install Racket deps
      run: |
        ./ci/setup-catalogs.sh
        raco pkg install -D --auto --skip-installed \
          congame-core/ \
          conscript/ \
          congame-example-study/ \
          congame-identity/ \
          studies/ \
          congame-pjb-studies/ \
          congame-price-lists/ \
          congame-smtp-proxy/ \
          congame-tests/ \
          congame-web/
        raco setup --pkgs \
          congame-core \
          conscript \
          congame-example-study \
          congame-identity \
          studies \
          congame-pjb-studies \
          congame-price-lists \
          congame-smtp-proxy \
          congame-tests \
          congame-web

    - name: Install Node
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'

    - name: Install Node packages
      run: npm install

    - name: Lint Frontend Sources
      run: npm run lint

    - name: Build Node assets
      run: npm run build

    - name: Build distributions
      run: |
        mkdir build
        raco scribble \
          +m \
          --htmls \
          --dest build/docs \
          --redirect 'https://docs.racket-lang.org/local-redirect/index.html' \
          congame-doc/congame.scrbl

        raco koyo dist -t build/identity ++lang north congame-identity/dynamic.rkt
        raco koyo dist -t build/smtp-proxy congame-smtp-proxy/main.rkt
        raco koyo dist \
          -t build/web \
          ++lang conscript \
          ++lang conscript/with-require \
          ++lib conscript/admin \
          ++lib conscript/form0 \
          ++lib conscript/game-theory \
          ++lib conscript/survey-tools \
          ++lang north \
          congame-web/dynamic.rkt

    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build

  deploy:
    name: "Deploy"
    needs: [test, build]
    runs-on: "ubuntu-22.04"
    concurrency:
      group: deploy

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build

    # {upload,download}-artifact loses executable permissions.
    - name: Fixup executable permissions
      run: |
        chmod +x build/identity/bin/congame-identity
        chmod +x build/identity/lib/plt/racketcs-*
        chmod +x build/smtp-proxy/bin/congame-smtp-proxy
        chmod +x build/smtp-proxy/lib/plt/racketcs-*
        chmod +x build/web/bin/congame-web
        chmod +x build/web/lib/plt/racketcs-*

    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.14
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.17'

    - name: Install koyo
      run: raco pkg install -D --auto koyo-lib

    - name: Deploy staging
      run: ./ci/deploy.sh STAGING
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        POSTMARK_TOKEN: ${{ secrets.POSTMARK_TOKEN }}
        SENTRY_DSN : ${{ secrets.SENTRY_DSN }}
      if: >-
        startsWith(github.ref, 'refs/heads/main')

    - name: Deploy production
      run: ./ci/deploy.sh PRODUCTION
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        POSTMARK_TOKEN: ${{ secrets.POSTMARK_TOKEN }}
        SENTRY_DSN : ${{ secrets.SENTRY_DSN }}
      if: >-
        startsWith(github.ref, 'refs/tags/v')
